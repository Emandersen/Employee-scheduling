extends layout


block content
    div.navbar.navbar-expand-lg.navbar-light.bg-light
        ul.nav.navbar-nav
            li(style='position: relative;') 
                a.nav-link.dropdown-toggle(href='#' id='navbarDropdown1' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false') Vacation functionalities
                .dropdown-menu(style='position: absolute; top: 100%; left: 0; z-index: 1000; float: left; min-width: 10rem; padding: 0.5rem 0; margin: 0.125rem 0 0; font-size: 1rem; color: #212529; text-align: left; list-style: none; background-color: #fff; background-clip: padding-box; border: 1px solid rgba(0,0,0,.15); border-radius: .25rem;' aria-labelledby='navbarDropdown1')
                    button.btn.btn-primary(id="vacationRequests" style="margin: 10px; background-color: blue; color: white;") Vacation requests
                    button.btn.btn-primary(onclick='handleApprovedVacationsEvent(event)' style='margin: 10px; background-color: blue; color: white;') Approved vacations

        ul.nav.navbar-nav.ml-auto
            li(style='position: relative;') 
                a.nav-link.dropdown-toggle(href='#' id='navbarDropdown2' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false') User functionalities
                .dropdown-menu(style='position: absolute; top: 100%; left: 0; z-index: 1000; float: left; min-width: 10rem; padding: 0.5rem 0; margin: 0.125rem 0 0; font-size: 1rem; color: #212529; text-align: left; list-style: none; background-color: #fff; background-clip: padding-box; border: 1px solid rgba(0,0,0,.15); border-radius: .25rem;' aria-labelledby='navbarDropdown2')
                    button.btn.btn-primary(onclick='handleAddShiftEveryEvent(event)' style='margin: 10px; background-color: blue; color: white;') Add shifts
                    button.btn.btn-primary(onclick='deleteShiftsTimeframeEvent(event)' style='margin: 10px; background-color: blue; color: white;') Delete shifts


    div.table-responsive(id='scroll-container', style='visibility: hidden;')
        table.table.table-striped
            thead
                tr
                    th(style='border-right: 1px solid #000; position: sticky; left: 0; background: white; z-index: 1;') User
                    - var previousWeekNumber = null
                    - var currentWeek = moment().isoWeek()
                    each date in dates
                        - var weekNumber = moment(date).isoWeek()
                        if previousWeekNumber != null && weekNumber != previousWeekNumber
                            if weekNumber == currentWeek
                                th(id='week-' + weekNumber style='background-color: #1cbffd; width: 2px; opacity: 0.5; color: white; position: sticky;') Week #{weekNumber}
                            else
                                th(id='week-' + weekNumber style='background-color: #000; width: 2px; opacity: 0.5; color: white; position: sticky;') Week #{weekNumber}
                        th(style='font-size: 10px; border-right: 1px solid #000;') #{moment(date).format('dddd')}<br>#{moment(date).format('DD. MMMM')}<br>#{moment(date).format('YYYY')}
                        - previousWeekNumber = weekNumber
            tbody
                each user in users
                    tr
                        td(style='border-right: 1px solid #000; position: sticky; left: 0; top: 0; background: white; z-index: 100;') #{user.firstName} #{user.lastName}
                        - var previousWeekNumber = null
                        - var dateIndex = 0
                        each schedule in user.schedules
                            - var date = new Date(dates[dateIndex])
                            - var weekNumber = Math.ceil((date - new Date(date.getFullYear(),0,1) + 1) / 604800000)
                            if weekNumber != previousWeekNumber && previousWeekNumber != null
                                td(style='background-color: #000; width: 2px;')
                            if schedule.workHours > 0
                                td(style='border-right: 1px solid #000; font-size: 10px; white-space: nowrap; position: relative; background: #{schedule.blockColor};' data-date=dates[dateIndex] data-user=user.email)
                                    a(onclick='handleEditEvent(event)' style='display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; z-index: 3;')
                                    div(style='position: relative; z-index: 2;')
                                        | Role: #{schedule.role}
                                        br
                                        | Department: #{schedule.department}  
                                        br
                                        | Location: #{schedule.location} 
                                        br
                                        | Time: #{schedule.startTime} - #{schedule.endTime} 
                                        br
                                        | Hours: #{schedule.workHours}
                            else 
                                td(style='border-right: 1px solid #000; font-size: 10px; white-space: nowrap; position: relative; background: #{schedule.blockColor};' data-date=dates[dateIndex] data-user=user.email)
                                    a(onclick='handleAddEvent(event)' style='display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; z-index: 3;')
                                    div(style='position: relative; z-index: 2;') No work scheduled 
                            - previousWeekNumber = weekNumber
                            - dateIndex++

        div(id='addModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);')
            div(class='modal-content container' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 80%; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);')
                span(id='closeButtonAdd' class='close' style='color: #aaa; float: right; font-size: 28px; font-weight: bold;') &times;
                form(id='addForm')
                    label(for='department' style='display: block; margin-top: 5px; font-size: 12px;') Department
                    select#department.form-control(name='department' required)
                        option(value='Cardiology') Cardiology
                        option(value='Neurology') Neurology
                        option(value='Orthopedics') Orthopedics
                        option(value='Pediatrics') Pediatrics
                        option(value='Radiology') Radiology
                        option(value='Surgery') Surgery
                        option(value='Dermatology') Dermatology
                        option(value='Gastroenterology') Gastroenterology
                        option(value='Endocrinology') Endocrinology
                        option(value='Oncology') Oncology
                        option(value='Ophthalmology') Ophthalmology
                        option(value='Psychiatry') Psychiatry
                        option(value='Anesthesiology') Anesthesiology
                        option(value='Gynecology') Gynecology
                        option(value='Geriatrics') Geriatrics
                        option(value='Immunology') Immunology
                    label(for='location' style='display: block; margin-top: 5px; font-size: 12px;') Location
                    select#location.form-control(name='location' required)
                        option(value='Rigshospitalet - Copenhagen') Rigshospitalet - Copenhagen
                        option(value='Bispebjerg Hospital - Copenhagen') Bispebjerg Hospital - Copenhagen
                        option(value='Herlev Hospital - Herlev') Herlev Hospital - Herlev
                        option(value='Hillerød Hospital - Hillerød') Hillerød Hospital - Hillerød
                        option(value='Hvidovre Hospital - Hvidovre') Hvidovre Hospital - Hvidovre
                        option(value='Holbæk Hospital - Holbæk') Holbæk Hospital - Holbæk
                        option(value='Roskilde Hospital - Roskilde') Roskilde Hospital - Roskilde
                        option(value='Næstved Hospital - Næstved') Næstved Hospital - Næstved
                        option(value='Slagelse Hospital - Slagelse') Slagelse Hospital - Slagelse
                        option(value='Nykøbing Falster Hospital - Nykøbing Falster') Nykøbing Falster Hospital - Nykøbing Falster
                    label(for='startTime' style='display: block; margin-top: 5px; font-size: 12px;') Start Time
                    input(type='time' id='startTime' name='startTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='endTime' style='display: block; margin-top: 5px; font-size: 12px;') End Time
                    input(type='time' id='endTime' name='endTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    input(type='submit' value='Submit' style='background-color: #4CAF50; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;')
        
        div(id='editModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);')
            div(class='modal-content container' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 80%; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);')
                span(id='closeButtonEdit' class='closeButton' style='color: #aaa; float: right; font-size: 28px; font-weight: bold;') &times;
                form(id='editForm')
                    label(for='editDepartment' style='display: block; margin-top: 5px; font-size: 12px;') Department
                    select#editDepartment.form-control(name='department' required)
                        option(value='Cardiology') Cardiology
                        option(value='Neurology') Neurology
                        option(value='Orthopedics') Orthopedics
                        option(value='Pediatrics') Pediatrics
                        option(value='Radiology') Radiology
                        option(value='Surgery') Surgery
                        option(value='Dermatology') Dermatology
                        option(value='Gastroenterology') Gastroenterology
                        option(value='Endocrinology') Endocrinology
                        option(value='Oncology') Oncology
                        option(value='Ophthalmology') Ophthalmology
                        option(value='Psychiatry') Psychiatry
                        option(value='Anesthesiology') Anesthesiology
                        option(value='Gynecology') Gynecology
                        option(value='Geriatrics') Geriatrics
                        option(value='Immunology') Immunology
                    label(for='editLocation' style='display: block; margin-top: 5px; font-size: 12px;') Location
                    select#editLocation.form-control(name='location' required)
                        option(value='Rigshospitalet - Copenhagen') Rigshospitalet - Copenhagen
                        option(value='Bispebjerg Hospital - Copenhagen') Bispebjerg Hospital - Copenhagen
                        option(value='Herlev Hospital - Herlev') Herlev Hospital - Herlev
                        option(value='Hillerød Hospital - Hillerød') Hillerød Hospital - Hillerød
                        option(value='Hvidovre Hospital - Hvidovre') Hvidovre Hospital - Hvidovre
                        option(value='Holbæk Hospital - Holbæk') Holbæk Hospital - Holbæk
                        option(value='Roskilde Hospital - Roskilde') Roskilde Hospital - Roskilde
                        option(value='Næstved Hospital - Næstved') Næstved Hospital - Næstved
                        option(value='Slagelse Hospital - Slagelse') Slagelse Hospital - Slagelse
                        option(value='Nykøbing Falster Hospital - Nykøbing Falster') Nykøbing Falster Hospital - Nykøbing Falster
                    label(for='editStartTime' style='display: block; margin-top: 5px; font-size: 12px;') Start Time
                    input(type='time' id='editStartTime' name='startTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='editEndTime' style='display: block; margin-top: 5px; font-size: 12px;') End Time
                    input(type='time' id='editEndTime' name='endTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='editUser' style='display: block; margin-top: 5px; font-size: 12px;') Reassign to User
                    select#editUser.form-control(name='user' required)
                        option(value='false') Don't reassign
                        each user in users
                            option(value=user.email) #{user.firstName} #{user.lastName} - #{user.role}
                        
                    input(type='submit' value='Submit' style='background-color: #4CAF50; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;')
                button(id='deleteShift' onclick='deleteShift(event)' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Delete Shift

        div(id='approvedVacationsModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); padding-top: 50px;')
            div(class='modal-content container' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 80%; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);')
                span(id='closeButtonApprovedVacations' class='close' style='color: #aaa; float: right; font-size: 28px; font-weight: bold;') &times;
                div(class='row')
                    each user in users
                        if user.vacationDays.length > 0 && user.vacationDays.some(entry => entry[0] === true)
                            div(class='col-md-6')
                                details(style='margin: 10px; padding: 10px; border: 10px solid #ddd; border-radius: 5px; background-color: #f9f9f9;')
                                    summary(style='cursor: pointer; font-weight: bold; padding: 5px;')
                                        | #{user.firstName} #{user.lastName} - #{user.role}
                                        button(onclick='handleVacationDisapproveAll(event, "' + user.email + '")' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Disapprove all
                                    br
                                    for vacation in user.vacationDays
                                        if vacation[0] === true
                                            - var formattedDate = moment(vacation[1]).format('YYYY-MM-DD');
                                            div(style="border: 5px solid #ddd; border-radius: 5px; padding: 5px; margin: 5px; background-color: #f9f9f9;")
                                                p(id='vacation=' + vacation[1]) #{formattedDate} 
                                                button(onclick='handleVacationDisapprove(event, "' + vacation[1] + '", "' + user.email + '")' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Disapprove
                                                button(onclick='handleVacationDelete(event, "' + vacation[1] + '", "' + user.email + '")' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Delete
                                            br

        div(id='vacationRequestsModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); padding-top: 50px;')
            div(class='modal-content container' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 80%; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);')
                span(id='closeButtonVacation' class='close' style='color: #aaa; float: right; font-size: 28px; font-weight: bold;') &times;
                div(class='row')
                    each user in users
                        if user.vacationDays.length > 0 && user.vacationDays.some(entry => entry[0] === false)
                            div(class='col-md-6')
                                    details(style='margin: 10px; padding: 10px; border: 10px solid #ddd; border-radius: 5px; background-color: #f9f9f9;')
                                        summary(style='cursor: pointer; font-weight: bold; padding: 5px;')
                                            | #{user.firstName} #{user.lastName} - #{user.role}
                                            button(onclick='handleVacationApproveAll(event, "' + user.email + '")' style='background-color: #4CAF50; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Approve all
                                            button(onclick='handleVacationDeleteAll(event, "' + user.email + '")' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Delete all
                                        for vacation in user.vacationDays
                                            if vacation[0] != true
                                                - var formattedDate = moment(vacation[1]).format('YYYY-MM-DD');
                                                div(style="border: 5px solid #ddd; border-radius: 5px; padding: 5px; margin: 5px; background-color: #f9f9f9;")
                                                    p(id='vacation=' + vacation[1]) #{formattedDate} 
                                                    button(onclick='handleVacationApprove(event, "' + vacation[1] + '", "' + user.email + '")' style='background-color: #4CAF50; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Approve
                                                    button(onclick='handleVacationDelete(event, "' + vacation[1] + '", "' + user.email + '")' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;') Delete
                                            br

        div(id='addShiftEveryModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);')
            div(class='modal-content' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 20%;')
                span(id='closeButtonAddShiftEvery' class='close' style='color: #aaa; float: right; font-size: 20px; font-weight: bold;') &times;
                form(id='addShiftEveryForm')
                    label(for='role' style='display: block; margin-top: 5px; font-size: 12px;') User
                    select#user.form-control(name='user' required)
                        each user in users
                            option(value=user.email) #{user.firstName} #{user.lastName} - #{user.role}
                    label(for='role' style='display: block; margin-top: 5px; font-size: 12px;') Day of the week
                    select#dayOfWeek.form-control(name='dayOfWeek' required)
                        option(value='Monday') Monday
                        option(value='Tuesday') Tuesday
                        option(value='Wednesday') Wednesday
                        option(value='Thursday') Thursday
                        option(value='Friday') Friday
                        option(value='Saturday') Saturday
                        option(value='Sunday') Sunday
                    label(for='department' style='display: block; margin-top: 5px; font-size: 12px;') Start week
                    input(type='date' id='startWeek' name='startWeek' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='department' style='display: block; margin-top: 5px; font-size: 12px;') End week
                    input(type='date' id='endWeek' name='endWeek' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='department' style='display: block; margin-top: 5px; font-size: 12px;') Department
                    select#department.form-control(name='department' required)
                        option(value='Cardiology') Cardiology
                        option(value='Neurology') Neurology
                        option(value='Orthopedics') Orthopedics
                        option(value='Pediatrics') Pediatrics
                        option(value='Radiology') Radiology
                        option(value='Surgery') Surgery
                        option(value='Dermatology') Dermatology
                        option(value='Gastroenterology') Gastroenterology
                        option(value='Endocrinology') Endocrinology
                        option(value='Oncology') Oncology
                        option(value='Ophthalmology') Ophthalmology
                        option(value='Psychiatry') Psychiatry
                        option(value='Anesthesiology') Anesthesiology
                        option(value='Gynecology') Gynecology
                        option(value='Geriatrics') Geriatrics
                        option(value='Immunology') Immunology
                    label(for='location' style='display: block; margin-top: 5px; font-size: 12px;') Location
                    select#location.form-control(name='location' required)
                        option(value='Rigshospitalet - Copenhagen') Rigshospitalet - Copenhagen
                        option(value='Bispebjerg Hospital - Copenhagen') Bispebjerg Hospital - Copenhagen
                        option(value='Herlev Hospital - Herlev') Herlev Hospital - Herlev
                        option(value='Hillerød Hospital - Hillerød') Hillerød Hospital - Hillerød
                        option(value='Hvidovre Hospital - Hvidovre') Hvidovre Hospital - Hvidovre
                        option(value='Holbæk Hospital - Holbæk') Holbæk Hospital - Holbæk
                        option(value='Roskilde Hospital - Roskilde') Roskilde Hospital - Roskilde
                        option(value='Næstved Hospital - Næstved') Næstved Hospital - Næstved
                        option(value='Slagelse Hospital - Slagelse') Slagelse Hospital - Slagelse
                        option(value='Nykøbing Falster Hospital - Nykøbing Falster') Nykøbing Falster Hospital - Nykøbing Falster
                    label(for='startTime' style='display: block; margin-top: 5px; font-size: 12px;') Start Time
                    input(type='time' id='startTime' name='startTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='endTime' style='display: block; margin-top: 5px; font-size: 12px;') End Time
                    input(type='time' id='endTime' name='endTime' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    input(type='submit' value='Submit' style='background-color: #4CAF50; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;')

        div(id='deleteShiftsModal' class='modal' style='display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);')
            div(class='modal-content' style='background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 20%;')
                span(id='closeButtonDeleteShifts' class='close' style='color: #aaa; float: right; font-size: 20px; font-weight: bold;') &times;
                form(id='deleteShiftsForm')
                    label(style='display: block; margin-top: 5px; font-size: 12px;') User
                    select#user.form-control(name='user' required)
                        each user in users
                            option(value=user.email) #{user.firstName} #{user.lastName} - #{user.role}
                    label(for='startDate' style='display: block; margin-top: 5px; font-size: 12px;') Start Date
                    input(type='date' id='startDate' name='startDate' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    label(for='endDate' style='display: block; margin-top: 5px; font-size: 12px;') End Date
                    input(type='date' id='endDate' name='endDate' required style='width: 100%; padding: 3px 5px; margin: 2px 0; box-sizing: border-box; border: none; background-color: #f8f8f8; font-size: 12px;')
                    input(type='submit' value='Submit' style='background-color: #f44336; color: white; padding: 3px 5px; margin: 2px 0; border: none; cursor: pointer; width: 100%; font-size: 12px;')
        
        script.
            // Variables
            var date;
            var user;

            // Modal handling
            function handleModal(modalId, closeButtonId) {
                var modal = document.getElementById(modalId);
                var span = document.getElementById(closeButtonId);

                modal.style.display = "block";

                span.onclick = function() {
                    modal.style.display = "none";
                }

                window.onclick = function(event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
                }
            }

            // Event handlers
            document.getElementById('vacationRequests').onclick = function() {
                handleModal("vacationRequestsModal", "closeButtonVacation");
            };

            function handleAddEvent(event) {
                handleModal("addModal", "closeButtonAdd");
                handleTdClick();
                handleFormSubmit("addForm", '/planning-tool/add-shift');
            }

            function handleEditEvent(event) {
                handleModal("editModal", "closeButtonEdit");
                handleTdClick();
                handleFormSubmit("editForm", '/planning-tool/edit-shift');
            }

            function handleApprovedVacationsEvent(event) {
                handleModal("approvedVacationsModal", "closeButtonApprovedVacations");
            }

            function handleAddShiftEveryEvent(event) {
                handleModal("addShiftEveryModal", "closeButtonAddShiftEvery");
                handleFormSubmit("addShiftEveryForm", '/planning-tool/add-shift-every/');
            }

            function deleteShiftsTimeframeEvent(event) {
                handleModal("deleteShiftsModal", "closeButtonDeleteShifts");
                handleFormSubmit("deleteShiftsForm", '/planning-tool/delete-shifts-timeframe');
            }


            // Vacation request handling
            function handleVacationRequest(event, date, email, url) {
                var xhr = new XMLHttpRequest();
                xhr.open("POST", url, true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.send(JSON.stringify({
                    user: email,
                    date: date
                }));

                document.getElementById('vacationModal').style.display = 'none';
                setTimeout(function() {
                    location.reload();
                }, 1000); // Delay in milliseconds (e.g., 2000 = 2 seconds)
            }


            function handleVacationApproveAll(event, email) {
                handleVacationRequest(event, null, email, '/planning-tool/approve-all-vacation');
            }

            function handleVacationDeleteAll(event, email) {
                handleVacationRequest(event, null, email, '/planning-tool/delete-all-vacation');
            }

            function handleVacationDisapproveAll(event, email) {
                handleVacationRequest(event, null, email, '/planning-tool/disapprove-all-vacation');
            }

            function handleVacationApprove(event, date, email) {
                handleVacationRequest(event, date, email, '/planning-tool/approve-vacation');
            }

            function handleVacationDelete(event, date, email) {
                handleVacationRequest(event, date, email, '/planning-tool/delete-vacation');
            }

            function handleVacationDisapprove(event, date, email) {
                handleVacationRequest(event, date, email, '/planning-tool/disapprove-vacation');
            }


            

            // Click event for table data
            function handleTdClick() {
                $('td').on('click', function() {
                    date = $(this).data('date');
                    user = $(this).data('user');

                    console.log('Date clicked: ' + date);
                    console.log('User clicked: ' + user);
                });
            }

            // Form submission
            function handleFormSubmit(formId, url) {
                document.getElementById(formId).onsubmit = function(e) {
                    e.preventDefault();

                    var form = document.getElementById(formId);
                    var formData = {};
                    for (var i = 0; i < form.elements.length; i++) {
                        if (form.elements[i].tagName === 'INPUT' || form.elements[i].tagName === 'SELECT') {
                            formData[form.elements[i].name] = form.elements[i].value;
                        }
                    }

                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", url, true);
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.send(JSON.stringify(formData));

                    document.getElementById(formId).parentNode.style.display = "none";
                    setTimeout(function() {
                        location.reload();
                    }, 1000); // Delay in milliseconds (e.g., 2000 = 2 seconds)
                }

            }

            // Delete shift
            window.deleteShift = function(event) {
                handleTdClick();

                var xhr = new XMLHttpRequest();
                xhr.open("POST", '/planning-tool/delete-shift', true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.send(JSON.stringify({
                    date: date,
                    user: user
                }));

                document.getElementById('editModal').style.display = 'none';
            }

            // Escape key handling
            document.onkeydown = function(evt) {
                evt = evt || window.event;
                var isEscape = (evt.key === "Escape" || evt.key === "Esc");
                if (isEscape) {
                    ['addModal', 'editModal', 'vacationModal'].forEach(function(modalId) {
                        document.getElementById(modalId).style.display = 'none';
                    });
                }
            };

            // DOMContentLoaded event
            window.addEventListener('DOMContentLoaded', (event) => {
                const currentWeekElement = document.getElementById('week-' + #{currentWeek});
                const scrollContainer = document.getElementById('scroll-container');
                if (currentWeekElement && scrollContainer) {
                    const offset = 100; // Adjust this value to your needs
                    const elementPosition = currentWeekElement.getBoundingClientRect().left - scrollContainer.getBoundingClientRect().left;
                    const offsetPosition = elementPosition - offset;

                    scrollContainer.scrollLeft = offsetPosition;
                }
                document.getElementById('scroll-container').style.visibility = 'visible';
            });