extends layout

block content
  div.personal-schedule-container
    h1(id='personal-schedule-title')= title
    each week in weeks
      h2(class='personal-schedule-week-header personal-schedule-week-' + week.number + (week.number == currentWeek ? ' personal-schedule-current-week' : ' personal-schedule-other-week')) Week #{week.number} - #{week.year} #{week.number == currentWeek ? '(Current Week)' : ''}
      div.personal-schedule-week-container
        table#personal-schedule-schedule-table
          tbody
            each day in week.days
              tr(class='personal-schedule-schedule-row')
                td= day.date
                if day.workHours > 0
                  td Role: #{day.role}
                  td Department: #{day.department}
                  td Location: #{day.location}
                  td Hours: #{day.startTime} - #{day.endTime} (#{day.workHours})
                  td
                    form.action-buttons(method='post', action=`/toggle-shift/${day.id}`)
                      button.btn(type='submit') #{day.released ? 'Claim shift' : 'Release Shift'}
                else
                  td(colspan='5') No work scheduled 
                td
                  - var date = typeof day.date === 'string' ? new Date(day.date) : day.date
                  - var formattedDate = moment(date).format('dddd D. MMMM YYYY')
                  form.action-buttons(method='post', action='/request-vacation/' + formattedDate)
                    - var dayDateString = moment(date).format('YYYY-MM-DDT00:00:00.000+00:00')
                    - var isVacationDay = user.vacationDays.some(vacationDay => vacationDay[1] === dayDateString);
                    button.btn(type='submit') #{isVacationDay ? 'Cancel Vacation Request' : 'Request Vacation'}
  script.
    function formatDate(date) {
      return moment(typeof date === 'string' ? new Date(date) : date).format('dddd D. MMMM YYYY');
    }

    window.addEventListener('DOMContentLoaded', (event) => {
      const currentWeekElement = document.querySelector('.personal-schedule-week-' + #{currentWeek});
      if (currentWeekElement) {
        const offset = 100; // Adjust this value to your needs
        const elementPosition = currentWeekElement.getBoundingClientRect().top + window.pageYOffset;
        const offsetPosition = elementPosition - offset;

        window.scrollTo({
          top: offsetPosition,
          behavior: "smooth"
        });
      }
    });